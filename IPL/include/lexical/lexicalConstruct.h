#ifndef _LEX_CONSTR_H
#define _LEX_CONSTR_H

//-------------------------------------------------------------------------------
typedef enum { LA_NO, LA_STRG, LA_NUMB, LA_SIGN, LA_WORD, LA_LINE } lenum;
typedef enum {   WAIT_NO,  WAIT_CCOMM,  WAIT_NLINE,  WAIT_NWORD   } wenum;

#define REWO_STOP 0
#define REWO_ENDF 1
#define REWO_MORE 2
//-------------------------------------------------------------------------------
// символы: цифра, знак, буква, пробел

// есть некий список идентификаторов и некий список рег.слов в которым их надо искать на совпадения
// заранее неизвестно какие конкретно слова входят в списки слов

// идентификатор - есть последовательность букв, цифр и пробелов, где первый символ каждого входящего\
                   в него слова обязательно буква, а последний цифра или буква.
// рег.слово     - последовательность букв и пробелов, где первый и последний символ - буквы.

// при том максимально возможная - в случае если правильно и "добавить", и "добавить в" - надо брать "добавить в"
// при том "добавить в" ~ "добавить    в" ~ "добавить\tв" ~ "добавить\nв" ... идентичны и равны "добавить в"

// знак          - правильная последовательность знаков, при том "++=+" ~ "++","=","+"\
                   список правильных знаков тоже присутствует; - допустим он как в С

// целое число   - это последовательность цифр
// действ.число  - последовательность цифр и одной дес.точки, начиная и кончая цифрой
                 
// строка        - последовательность любых символов внутри ковычек
// комментарий   - последовательность между словом с номером O_COMM и C_COMM\
                   или любые символы  между словом с номером L_COMM и '\n'\
                   конкретно заранее не известно слово обозначающее комментарий
//-------------------------------------------------------------------------------
int     compose_nword (char *buf, list_nm *nwrd);
int     extract_nword (char *buf, list_nm *nwrd);
int     restore_nword (char *buf, unsigned int n);
myvar*  lookfor_nword (char *buf);
//-------------------------------------------------------------------------------
wenum  laReWoComm_Wait (myvar* pvar, wenum wait);
int    laGrbgToVarName (names_table *Names_table, list_pmv *List_atoms);
char*  laLexIncWordBuf (lexical_data *Lex, unsigned int i);
//-------------------------------------------------------------------------------
#endif